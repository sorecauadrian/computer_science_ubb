Program State with id: 1
ExecutionStack:
 { (Ref( int ) v1 ; (Ref( int ) v2 ; (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { Ref( int ) v1 | (Ref( int ) v2 ; (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { Ref( int ) v1 | (Ref( int ) v2 ; (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (Ref( int ) v2 ; (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (Ref( int ) v2 ; (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { Ref( int ) v2 | (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { Ref( int ) v2 | (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (Ref( int ) v3 ; (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { Ref( int ) v3 | (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { Ref( int ) v3 | (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (int cnt ; (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { int cnt | (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { int cnt | (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) )  |  }

SymbolTable:
 { v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (new(v1, 2) ; (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { new(v1, 2) | (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { new(v1, 2) | (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 0, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{ }


Program State with id: 1
ExecutionStack:
 { (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
 }


Program State with id: 1
ExecutionStack:
 { (new(v2, 3) ; (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
 }


Program State with id: 1
ExecutionStack:
 { new(v2, 3) | (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
 }


Program State with id: 1
ExecutionStack:
 { new(v2, 3) | (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 0, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
 }


Program State with id: 1
ExecutionStack:
 { (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
 }


Program State with id: 1
ExecutionStack:
 { (new(v3, 4) ; (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
 }


Program State with id: 1
ExecutionStack:
 { new(v3, 4) | (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
 }


Program State with id: 1
ExecutionStack:
 { new(v3, 4) | (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 0, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
 }


Program State with id: 1
ExecutionStack:
 { (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (newBarrier(cnt,rh(v2)) ; (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { newBarrier(cnt,rh(v2)) | (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { newBarrier(cnt,rh(v2)) | (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) )  |  }

SymbolTable:
 { cnt->0; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) ; (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) ) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) | (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { fork((await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) ) ) | (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { (await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) ; (await(cnt) ; print(rh(v3))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { (await(cnt) ; (wH(v1, rh(v1)*10) ; print(rh(v1))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) | (await(cnt) ; print(rh(v3)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { await(cnt) | (wH(v1, rh(v1)*10) ; print(rh(v1)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { fork((await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) ) ) | (await(cnt) ; print(rh(v3)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { await(cnt) | (wH(v1, rh(v1)*10) ; print(rh(v1)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (await(cnt) ; print(rh(v3)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { (wH(v1, rh(v1)*10) ; print(rh(v1)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { (await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { (await(cnt) ; print(rh(v3)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { (wH(v1, rh(v1)*10) ; print(rh(v1)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { (await(cnt) ; (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) ) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { await(cnt) | print(rh(v3)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { wH(v1, rh(v1)*10) | print(rh(v1)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { await(cnt) | (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { await(cnt) | print(rh(v3)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { wH(v1, rh(v1)*10) | print(rh(v1)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { await(cnt) | (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->2
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { print(rh(v3)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { print(rh(v1)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 { print(rh(v3)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 { print(rh(v1)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { (wH(v2, rh(v2)*10) ; (wH(v2, rh(v2)*10) ; print(rh(v2))) )  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 {  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 1
ExecutionStack:
 {  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 10
ExecutionStack:
 {  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { wH(v2, rh(v2)*10) | (wH(v2, rh(v2)*10) ; print(rh(v2)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { wH(v2, rh(v2)*10) | (wH(v2, rh(v2)*10) ; print(rh(v2)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->3
3->4
 }


Program State with id: 100
ExecutionStack:
 { (wH(v2, rh(v2)*10) ; print(rh(v2)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->30
3->4
 }


Program State with id: 100
ExecutionStack:
 { (wH(v2, rh(v2)*10) ; print(rh(v2)))  |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->30
3->4
 }


Program State with id: 100
ExecutionStack:
 { wH(v2, rh(v2)*10) | print(rh(v2)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->30
3->4
 }


Program State with id: 100
ExecutionStack:
 { wH(v2, rh(v2)*10) | print(rh(v2)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->30
3->4
 }


Program State with id: 100
ExecutionStack:
 { print(rh(v2)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->300
3->4
 }


Program State with id: 100
ExecutionStack:
 { print(rh(v2)) |  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20  }

File table
{ }

Heap
{1->20
2->300
3->4
 }


Program State with id: 100
ExecutionStack:
 {  }

SymbolTable:
 { cnt->1; v1->( 1, int ); v2->( 2, int ); v3->( 3, int ); }

Output:
 { 4 20 300  }

File table
{ }

Heap
{1->20
2->300
3->4
 }



     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 01000000                    a dd 1
    14 00000004 3100                        string_a db 1 + '0', 0
    15 00000006 0000                        b dw 0
    16 00000008 61203D2025640A00            print_a db "a = %d", 10, 0
    17 00000010 62203D2000                  print_b db "b = ", 0
    18 00000015 2564202B2025642F25-         result db "%d + %d/%d = %d", 0
    18 0000001E 64203D20256400     
    19 00000025 256400                      d_format db "%d", 0
    20 00000028 257300                      s_format db "%s", 0
    21                                      
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; a natural number a (a: dword, defined in the data segment) is given. read a natural number b from the keyboard and calculate: a + a/b. display the result of this operation. the values will be displayed in 
    25                                          
    26                                          ; printf(print_a)
    27 00000000 FF35[00000000]                  push dword [a]
    28 00000006 68[08000000]                    push dword print_a
    29 0000000B FF15[00000000]                  call [printf]
    30 00000011 83C408                          add esp, 4*2
    31                                          
    32                                          ; printf()
    33                                          
    34                                          
    35                                          ; printf(print_b)
    36 00000014 68[10000000]                    push dword print_b
    37 00000019 68[28000000]                    push dword s_format
    38 0000001E FF15[00000000]                  call [printf]
    39 00000024 83C408                          add esp, 4*2
    40                                          
    41                                          ; scanf('%d', b)
    42 00000027 68[06000000]                    push dword b
    43 0000002C 68[25000000]                    push dword d_format
    44 00000031 FF15[00000000]                  call [scanf]
    45 00000037 83C408                          add esp, 4*2
    46                                          
    47                                          ; eax <- a + a/b
    48 0000003A FF35[00000000]                  push dword [a]
    49 00000040 6658                            pop ax
    50 00000042 665A                            pop dx
    51 00000044 66F73D[06000000]                idiv word [b]
    52 0000004B 98                              cwde
    53 0000004C 0305[00000000]                  add eax, dword [a]
    54                                          
    55                                          ; printf(result)
    56 00000052 50                              push dword eax
    57 00000053 FF35[06000000]                  push dword [b]
    58 00000059 FF35[00000000]                  push dword [a]
    59 0000005F FF35[00000000]                  push dword [a]
    60 00000065 68[15000000]                    push dword result
    61 0000006A FF15[00000000]                  call [printf]
    62 00000070 83C414                          add esp, 4*5
    63                                          
    64 00000073 6A00                            push dword 0        ; push the parameter for exit onto the stack
    65 00000075 FF15[00000000]                  call [exit]         ; call exit to terminate the program

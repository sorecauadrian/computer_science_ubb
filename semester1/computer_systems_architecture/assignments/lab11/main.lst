     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf, base8
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 2564202D3E2000              decimal_format db "%d -> ", 0
    11 00000007 257300                      string_format db "%s", 0
    12 0000000A 2000                        number dw 32
    13                                      
    14                                  ; show for each number from 32 to 126 the value of the number (in base 8) and the character with that ASCII code.
    15                                  segment code use32 class=code
    16                                      start:
    17 00000000 B95F000000                      mov ecx, 126 - 32 + 1
    18                                          repeat:
    19 00000005 51                                  push ecx
    20 00000006 BA00000000                          mov edx, 0
    21 0000000B 66A1[0A000000]                      mov ax, [number]
    22 00000011 E8(00000000)                        call base8          ; the result is going to be stored in dx
    23                                              
    24 00000016 52                                  push edx
    25 00000017 68[00000000]                        push decimal_format
    26 0000001C FF15[00000000]                      call [printf]
    27 00000022 83C408                              add esp, 4*2
    28                                              
    29 00000025 BB00000000                          mov ebx, 0
    30 0000002A 668B1D[0A000000]                    mov bx, [number]
    31 00000031 53                                  push ebx
    32 00000032 68[07000000]                        push string_format
    33 00000037 FF15[00000000]                      call [printf]
    34 0000003D 83C408                              add esp, 4*2
    35                                              
    36 00000040 66FF05[0A000000]                    inc word [number]
    37 00000047 59                                  pop ecx
    38 00000048 E2BB                            loop repeat
    39                                      
    40 0000004A 6A00                            push dword 0
    41 0000004C FF15[00000000]                  call [exit]
    42                                      
